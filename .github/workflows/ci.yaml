name: ci

on:
  pull_request:
    branches: [ main ]
    types: [opened, synchronize, reopened]

  pull_request_target:
    branches: [ main ]
    types: [closed]

  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

jobs:
  build_test:
    name: Build & Test (.NET 9)
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout PR code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Restore
        run: dotnet restore

      - name: Build
        run: dotnet build -c Release -warnaserror /p:ContinuousIntegrationBuild=true

      - name: Test
        run: dotnet test -c Release --no-build --verbosity normal

  pack_publish:
    name: Pack & Publish to NuGet
    runs-on: ubuntu-latest
    if: >
      github.event_name == 'pull_request_target' &&
      github.event.action == 'closed' &&
      github.event.pull_request.merged == true &&
      github.event.pull_request.base.ref == 'main'
    permissions:
      contents: read
    steps:
      - name: Checkout merged main
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Restore
        run: dotnet restore

      - name: Build
        run: dotnet build -c Release -warnaserror /p:ContinuousIntegrationBuild=true

      - name: Test
        run: dotnet test -c Release --no-build --verbosity normal

      - name: Extract version from csproj
        id: version
        shell: bash
        run: |
          VER=$(grep -oP '<Version>\K[^<]+' CalculationLibrary.Core/CalculationLibrary.Core.csproj)
          echo "ver=$VER" >> "$GITHUB_OUTPUT"

      - name: Pack
        run: |
          mkdir -p artifacts
          dotnet pack CalculationLibrary.Core/CalculationLibrary.Core.csproj \
            -c Release --no-build \
            /p:ContinuousIntegrationBuild=true \
            /p:PackageVersion=${{ steps.version.outputs.ver }} \
            /p:IncludeSymbols=true \
            /p:SymbolPackageFormat=snupkg \
            -o ./artifacts

      - name: Upload artifacts (for inspection)
        uses: actions/upload-artifact@v4
        with:
          name: nuget-artifacts
          path: artifacts/

      - name: Push to NuGet
        env:
          NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
        run: |
          dotnet nuget push "artifacts/*.nupkg" \
            --api-key "$NUGET_API_KEY" \
            --source https://api.nuget.org/v3/index.json \
            --skip-duplicate
          dotnet nuget push "artifacts/*.snupkg" \
            --api-key "$NUGET_API_KEY" \
            --source https://api.nuget.org/v3/index.json \
            --skip-duplicate
